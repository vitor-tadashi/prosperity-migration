<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm
						http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/batch
						http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
						http://www.springframework.org/schema/task 
						http://www.springframework.org/schema/task/spring-task-3.1.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<import resource="../config/context.xml" />
	<import resource="../config/database.xml" />

	<bean id="candidatoDAO" class="br.com.prosperity.batch.dao.CandidatoDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="candidatoBusiness" class="br.com.prosperity.batch.business.CandidatoBusiness">
		<property name="candidatoDAO" ref="candidatoDAO" />
	</bean>

	<bean id="itemProcessor" class="br.com.prosperity.batch.CustomItemProcessor" />
	<bean id="itemWriter" class="br.com.prosperity.batch.CustomItemWriter" />
	<bean id="itemReader" class="br.com.prosperity.batch.CustomItemReader">
		<property name="candidatoBusiness" ref="candidatoBusiness" />
	</bean>

	 <batch:job id="migration"> <batch:step id="step1"> <batch:tasklet> 
		<batch:chunk reader="itemReader" writer="itemWriter" processor="itemProcessor" 
		commit-interval="1"> </batch:chunk> </batch:tasklet> </batch:step> </batch:job>

	<!-- <batch:job id="migration">
		<batch:step id="ler" next="processar">
			<batch:tasklet ref="fileDeletingTasklet" >
			</batch:tasklet>
		</batch:step>
		<batch:step id="processar" next="escrever">
			<batch:tasklet>
				<batch:chunk processor="itemProcessor" commit-interval="1"></batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="escrever">
			<batch:tasklet>
				<batch:chunk writer="itemWriter" commit-interval="1"></batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job> -->

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- run every 1 minute -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<bean id="cronTrigger"
				class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
				<property name="jobDetail" ref="jobDetail" />
				<property name="cronExpression" value="0 0/1 * 1/1 * ? *" />
			</bean>
		</property>
	</bean>

	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="br.com.prosperity.batch.JobLauncherDetails" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="migration" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
			</map>
		</property>
	</bean>

	<bean
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="stepParent"
		class="org.springframework.batch.core.step.factory.FaultTolerantStepFactoryBean"
		abstract="true">
		<property name="backOffPolicy">
			<bean class="org.springframework.retry.backoff.FixedBackOffPolicy">
				<property name="backOffPeriod" value="10000" />
			</bean>
		</property>
	</bean>
</beans>